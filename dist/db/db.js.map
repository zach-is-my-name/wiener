{"version":3,"file":"db.js","names":["join","dirname","fileURLToPath","Low","JSONFile","__dirname","import","meta","url","file","adapter","db","addNewsletterToDb","date","text","prevUrl","nextUrl","read","data","newsletters","unshift","write","sort","a","b","Date","loadNewsletterFromDb","addedNewsletter","by","param","storedNewsletters","length","find","obj","slice","pop","Error","addNextUrl","i","nl","splice","getDateLatestInArchive","attempts","result","getArchiveLength"],"sources":["../../src/db/db.js"],"sourcesContent":["import { join, dirname } from 'node:path'\nimport { fileURLToPath } from 'node:url'\n\nimport { Low } from 'lowdb'\nimport { JSONFile } from 'lowdb/node'\nconst __dirname = dirname(fileURLToPath(import.meta.url)); //production db file\nconst file = join(__dirname, 'db.json')\nconst adapter = new JSONFile(file)\nconst db = new Low(adapter)\n\n\nexport async function addNewsletterToDb(date, text, url, prevUrl, nextUrl ) {\n  await db.read()\n  db.data ||= { newsletters: [] }             \n  db.data.newsletters.unshift({ date, text, url, prevUrl, nextUrl});\n  await db.write()\n  await db.read()\n  db.data ||= { newsletters: [] }             // For Node >= 15.x\n  \n  await db.read()\n  db.data.newsletters.sort((a, b) => new Date(b.date) - new Date(a.date))\n\n  await db.write()\n  \n  await db.read()\n  \n  const addedNewsletter = await loadNewsletterFromDb(\"date\", date)\n  return addedNewsletter \n}\n\nexport async function loadNewsletterFromDb(by, param) {\n  await db.read()\n  db.data ||= { newsletters: [] }             \n  const storedNewsletters = db.data.newsletters.sort((a, b) => new Date(b.date) - new Date(a.date))\n  if (storedNewsletters.length === 0) return storedNewsletters \n  switch (by) {\n    case \"date\":\n      return storedNewsletters.find(obj => obj.date === param)\n    case \"first\":\n      return storedNewsletters.slice(0,1).pop()\n    case \"url\":\n      return storedNewsletters.find(obj => obj.url === param)\n    case \"all\": \n      return storedNewsletters.slice()\n    default: \n      throw new Error()\n  }\n}\n\nexport async function addNextUrl(obj, i, nl) {\n    nl = nl.splice(i, 1, obj) \n    await db.write()   \n}\n\nexport async function getDateLatestInArchive() {\n  let result\n  let attempts  = 0\n  while (attempts < 2) {\n    try {\n      result = await loadNewsletterFromDb(\"first\")\n      if (result.length === 0)  {\n        return []\n      } else {\n      return result.date\n      }\n    } catch (error) {\n      attempts++\n    }\n  }\n throw new Error(\"failed to getDateLatestInArchive\") \n}\n\nexport async function getArchiveLength() {\n  await db.read()\n  db.data ||= { newsletters: [] }             \n  return db.data.newsletters.length \n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,OAAO,QAAQ,WAAW;AACzC,SAASC,aAAa,QAAQ,UAAU;AAExC,SAASC,GAAG,QAAQ,OAAO;AAC3B,SAASC,QAAQ,QAAQ,YAAY;AACrC,IAAMC,SAAS,GAAGJ,OAAO,CAACC,aAAa,CAACI,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3D,IAAMC,IAAI,GAAGT,IAAI,CAACK,SAAS,EAAE,SAAS,CAAC;AACvC,IAAMK,OAAO,GAAG,IAAIN,QAAQ,CAACK,IAAI,CAAC;AAClC,IAAME,EAAE,GAAG,IAAIR,GAAG,CAACO,OAAO,CAAC;AAG3B,gBAAsBE,iBAAiB;EAAA;AAAA;AAiBtC;EAAA,8EAjBM,iBAAiCC,IAAI,EAAEC,IAAI,EAAEN,GAAG,EAAEO,OAAO,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OACjEL,EAAE,CAACM,IAAI,EAAE;QAAA;UACfN,EAAE,CAACO,IAAI,KAAPP,EAAE,CAACO,IAAI,GAAK;YAAEC,WAAW,EAAE;UAAG,CAAC;UAC/BR,EAAE,CAACO,IAAI,CAACC,WAAW,CAACC,OAAO,CAAC;YAAEP,IAAI,EAAJA,IAAI;YAAEC,IAAI,EAAJA,IAAI;YAAEN,GAAG,EAAHA,GAAG;YAAEO,OAAO,EAAPA,OAAO;YAAEC,OAAO,EAAPA;UAAO,CAAC,CAAC;UAAC;UAAA,OAC5DL,EAAE,CAACU,KAAK,EAAE;QAAA;UAAA;UAAA,OACVV,EAAE,CAACM,IAAI,EAAE;QAAA;UACfN,EAAE,CAACO,IAAI,KAAPP,EAAE,CAACO,IAAI,GAAK;YAAEC,WAAW,EAAE;UAAG,CAAC,GAAa;UAAA;UAAA,OAEtCR,EAAE,CAACM,IAAI,EAAE;QAAA;UACfN,EAAE,CAACO,IAAI,CAACC,WAAW,CAACG,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAK,IAAIC,IAAI,CAACD,CAAC,CAACX,IAAI,CAAC,GAAG,IAAIY,IAAI,CAACF,CAAC,CAACV,IAAI,CAAC;UAAA,EAAC;UAAA;UAAA,OAEjEF,EAAE,CAACU,KAAK,EAAE;QAAA;UAAA;UAAA,OAEVV,EAAE,CAACM,IAAI,EAAE;QAAA;UAAA;UAAA,OAEeS,oBAAoB,CAAC,MAAM,EAAEb,IAAI,CAAC;QAAA;UAA1Dc,eAAe;UAAA,iCACdA,eAAe;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACvB;EAAA;AAAA;AAED,gBAAsBD,oBAAoB;EAAA;AAAA;AAiBzC;EAAA,iFAjBM,kBAAoCE,EAAE,EAAEC,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAC5ClB,EAAE,CAACM,IAAI,EAAE;QAAA;UACfN,EAAE,CAACO,IAAI,KAAPP,EAAE,CAACO,IAAI,GAAK;YAAEC,WAAW,EAAE;UAAG,CAAC;UACzBW,iBAAiB,GAAGnB,EAAE,CAACO,IAAI,CAACC,WAAW,CAACG,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAK,IAAIC,IAAI,CAACD,CAAC,CAACX,IAAI,CAAC,GAAG,IAAIY,IAAI,CAACF,CAAC,CAACV,IAAI,CAAC;UAAA,EAAC;UAAA,MAC7FiB,iBAAiB,CAACC,MAAM,KAAK,CAAC;YAAA;YAAA;UAAA;UAAA,kCAASD,iBAAiB;QAAA;UAAA,eACpDF,EAAE;UAAA,kCACH,MAAM,wBAEN,OAAO,yBAEP,KAAK,yBAEL,KAAK;UAAA;QAAA;UAAA,kCALDE,iBAAiB,CAACE,IAAI,CAAC,UAAAC,GAAG;YAAA,OAAIA,GAAG,CAACpB,IAAI,KAAKgB,KAAK;UAAA,EAAC;QAAA;UAAA,kCAEjDC,iBAAiB,CAACI,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,EAAE;QAAA;UAAA,kCAElCL,iBAAiB,CAACE,IAAI,CAAC,UAAAC,GAAG;YAAA,OAAIA,GAAG,CAACzB,GAAG,KAAKqB,KAAK;UAAA,EAAC;QAAA;UAAA,kCAEhDC,iBAAiB,CAACI,KAAK,EAAE;QAAA;UAAA,MAE1B,IAAIE,KAAK,EAAE;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAEtB;EAAA;AAAA;AAED,gBAAsBC,UAAU;EAAA;AAAA;AAG/B;EAAA,uEAHM,kBAA0BJ,GAAG,EAAEK,CAAC,EAAEC,EAAE;IAAA;MAAA;QAAA;UACvCA,EAAE,GAAGA,EAAE,CAACC,MAAM,CAACF,CAAC,EAAE,CAAC,EAAEL,GAAG,CAAC;UAAA;UAAA,OACnBtB,EAAE,CAACU,KAAK,EAAE;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACnB;EAAA;AAAA;AAED,gBAAsBoB,sBAAsB;EAAA;AAAA;AAgB3C;EAAA,mFAhBM;IAAA;IAAA;MAAA;QAAA;UAEDC,QAAQ,GAAI,CAAC;QAAA;UAAA,MACVA,QAAQ,GAAG,CAAC;YAAA;YAAA;UAAA;UAAA;UAAA;UAAA,OAEAhB,oBAAoB,CAAC,OAAO,CAAC;QAAA;UAA5CiB,MAAM;UAAA,MACFA,MAAM,CAACZ,MAAM,KAAK,CAAC;YAAA;YAAA;UAAA;UAAA,kCACd,EAAE;QAAA;UAAA,kCAEJY,MAAM,CAAC9B,IAAI;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAGlB6B,QAAQ,EAAE;QAAA;UAAA;UAAA;QAAA;UAAA,MAGT,IAAIN,KAAK,CAAC,kCAAkC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACnD;EAAA;AAAA;AAED,gBAAsBQ,gBAAgB;EAAA;AAAA;AAIrC;EAAA,6EAJM;IAAA;MAAA;QAAA;UAAA;UAAA,OACCjC,EAAE,CAACM,IAAI,EAAE;QAAA;UACfN,EAAE,CAACO,IAAI,KAAPP,EAAE,CAACO,IAAI,GAAK;YAAEC,WAAW,EAAE;UAAG,CAAC;UAAA,kCACxBR,EAAE,CAACO,IAAI,CAACC,WAAW,CAACY,MAAM;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAClC;EAAA;AAAA"}