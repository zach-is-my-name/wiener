{"version":3,"file":"db.js","names":["join","dirname","fileURLToPath","Low","JSONFile","__dirname","import","meta","url","file","adapter","db","addNewsletterToDb","date","text","prevUrl","nextUrl","read","data","newsletters","unshift","write","sort","a","b","Date","loadNewsletterFromDb","addedNewsletter","by","param","storedNewsletters","length","find","obj","slice","pop","Error","getDateLatestInArchive","attempts","result","getArchiveLength","replaceBlankNextUrl","dateLatestPub","setReplaceCycleInitd","nl","i","addNextUrl","newObj","splice","checkContinuity","hasContinuity","push","every","item"],"sources":["../../src/db/db.js"],"sourcesContent":["import { join, dirname } from 'node:path'\nimport { fileURLToPath } from 'node:url'\n\nimport { Low } from 'lowdb'\nimport { JSONFile } from 'lowdb/node'\nconst __dirname = dirname(fileURLToPath(import.meta.url)); //production db file\nconst file = join(__dirname, 'db.json')\nconst adapter = new JSONFile(file)\nconst db = new Low(adapter)\n\n\nexport async function addNewsletterToDb(date, text, url, prevUrl, nextUrl ) {\n  await db.read()\n  db.data ||= { newsletters: [] }             \n  db.data.newsletters.unshift({ date, text, url, prevUrl, nextUrl});\n  await db.write()\n  await db.read()\n  db.data ||= { newsletters: [] }             // For Node >= 15.x\n  \n  await db.read()\n  db.data.newsletters.sort((a, b) => new Date(b.date) - new Date(a.date))\n\n  await db.write()\n  \n  await db.read()\n  \n  const addedNewsletter = await loadNewsletterFromDb(\"date\", date)\n  return addedNewsletter \n}\n\n\nexport async function loadNewsletterFromDb(by, param) {\n  await db.read()\n  db.data ||= { newsletters: [] }             \n  const storedNewsletters = db.data.newsletters.sort((a, b) => new Date(b.date) - new Date(a.date))\n  if (storedNewsletters.length === 0) return storedNewsletters \n  switch (by) {\n    case \"date\":\n      return storedNewsletters.find(obj => obj.date === param)\n    case \"first\":\n      return storedNewsletters.slice(0,1).pop()\n    case \"url\":\n      return storedNewsletters.find(obj => obj.url === param)\n    case \"all\": \n      return storedNewsletters.slice()\n    default: \n      throw new Error()\n  }\n}\n\n\nexport async function getDateLatestInArchive() {\n  let result\n  let attempts  = 0\n  while (attempts < 2) {\n    try {\n      result = await loadNewsletterFromDb(\"first\")\n      if (result.length === 0)  {\n        return []\n      } else {\n      return result.date\n      }\n    } catch (error) {\n      attempts++\n    }\n  }\n throw new Error(\"failed to getDateLatestInArchive\") \n}\n\nexport async function getArchiveLength() {\n  await db.read()\n  db.data ||= { newsletters: [] }             \n  return db.data.newsletters.length \n}\n\nexport async function replaceBlankNextUrl(dateLatestPub, setReplaceCycleInitd) {\n\n  let newsletters = await loadNewsletterFromDb(\"all\")\n  if (newsletters.length > 1 && typeof dateLatestPub === 'string') {\n    let nl = newsletters\n    for (let i = 0; i < nl.length; i++) {\n      try {\n        if ( nl[i].date !== dateLatestPub && !nl[i].nextUrl.length) {\n          await addNextUrl(nl[i-1].url, i, nl)   \n        }\n      } catch(error) {\n        return\n      }\n    }\n    setReplaceCycleInitd(true)\n  } else if (newsletters.length <= 1) {\n    setReplaceCycleInitd(true)\n  }\n}\n\nasync function addNextUrl(nextUrl, i, nl) {\n  const newObj = {...nl[i], nextUrl}  \n  nl = nl.splice(i, 1, newObj) \n  await db.write()   \n}\n\nexport async function checkContinuity() {\n  const newsletters = await loadNewsletterFromDb(\"all\")\n\n  let hasContinuity = []\n  for (let i = 0; i < newsletters.length -1; i++) {\n    if (newsletters[i].prevUrl !== newsletters[i + 1]?.url) {\n      hasContinuity.push(false)\n    } else {\n      hasContinuity.push(true)\n    }\n  }\n  return hasContinuity.every((item) => item === true)\n}\n\n"],"mappings":"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"}