{"version":3,"file":"App.js","names":["React","useState","useEffect","MainBox","SearchPage","HelpPage","useCtrReducer","useInitLoad","useGetWien","useUpdateNewsletters","App","props","dateFromSearch","setDateFromSearch","lineFromSearch","setLineFromSearch","message","setMessage","loadState","helpPageHidden","searchPageHidden","popUpMessage","ctrDispatch","dateLatestPub","hasInternet","hasLatestInArchive","text","date","setTimeout"],"sources":["../../../src/ui/components/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport MainBox from './MainBox.js' \nimport SearchPage from './SearchPage.js'\nimport HelpPage from './HelpPage.js'\n\nimport {\n  useCtrReducer,\n  useInitLoad, \n  useGetWien, \n  useUpdateNewsletters,\n} from '../customHooks/index.js'\n\nfunction App(props) {\n\n  const [dateFromSearch, setDateFromSearch] = useState(\"\") \n  const [lineFromSearch, setLineFromSearch] = useState(null) \n  const [message, setMessage] = useState(\"\")\n\n  const [{loadState, helpPageHidden, searchPageHidden, popUpMessage}, ctrDispatch] = useCtrReducer()\n\n  const [dateLatestPub, hasInternet, hasLatestInArchive] = useInitLoad(ctrDispatch, loadState) \n\n  const {text, date} = useGetWien(loadState, ctrDispatch, hasLatestInArchive, hasInternet, dateFromSearch, setDateFromSearch, dateLatestPub) || {};\n\n  useUpdateNewsletters(dateLatestPub, hasLatestInArchive, hasInternet, text) \n\n  useEffect(() => {\n    if (!hasInternet && loadState === 'none') {\n      setTimeout(() => null, 5000)\n      setMessage(\"Error: newsletter DB is empty and there is no internet. connect to internet to populate newsletter db\")\n    }\n\n    if (loadState === 'loading') {\n      setMessage(\"Loading...\") \n    } \n\n  }, [hasInternet, loadState])\n\n  return ( \n    <MainBox setDateFromSearch={setDateFromSearch} setLineFromSearch={setLineFromSearch} lineFromSearch={lineFromSearch} searchPageHidden={searchPageHidden} renderText={text} ctrDispatch={ctrDispatch} helpPageHidden={helpPageHidden} message={message} popUpMessage={popUpMessage} loadState={loadState}/>\n  )\n}\n\nexport default App\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,QAAQ,MAAM,eAAe;AAEpC,SACEC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,oBAAoB,QACf,yBAAyB;AAEhC,SAASC,GAAG,CAACC,KAAK,EAAE;EAElB,gBAA4CV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjDW,cAAc;IAAEC,iBAAiB;EACxC,iBAA4CZ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAnDa,cAAc;IAAEC,iBAAiB;EACxC,iBAA8Bd,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCe,OAAO;IAAEC,UAAU;EAE1B,qBAAmFX,aAAa,EAAE;IAAA;IAAA;IAA1FY,SAAS,oBAATA,SAAS;IAAEC,cAAc,oBAAdA,cAAc;IAAEC,gBAAgB,oBAAhBA,gBAAgB;IAAEC,YAAY,oBAAZA,YAAY;IAAGC,WAAW;EAE/E,mBAAyDf,WAAW,CAACe,WAAW,EAAEJ,SAAS,CAAC;IAAA;IAArFK,aAAa;IAAEC,WAAW;IAAEC,kBAAkB;EAErD,WAAqBjB,UAAU,CAACU,SAAS,EAAEI,WAAW,EAAEG,kBAAkB,EAAED,WAAW,EAAEZ,cAAc,EAAEC,iBAAiB,EAAEU,aAAa,CAAC,IAAI,CAAC,CAAC;IAAzIG,IAAI,QAAJA,IAAI;IAAEC,IAAI,QAAJA,IAAI;EAEjBlB,oBAAoB,CAACc,aAAa,EAAEE,kBAAkB,EAAED,WAAW,EAAEE,IAAI,CAAC;EAE1ExB,SAAS,CAAC,YAAM;IACd,IAAI,CAACsB,WAAW,IAAIN,SAAS,KAAK,MAAM,EAAE;MACxCU,UAAU,CAAC;QAAA,OAAM,IAAI;MAAA,GAAE,IAAI,CAAC;MAC5BX,UAAU,CAAC,uGAAuG,CAAC;IACrH;IAEA,IAAIC,SAAS,KAAK,SAAS,EAAE;MAC3BD,UAAU,CAAC,YAAY,CAAC;IAC1B;EAEF,CAAC,EAAE,CAACO,WAAW,EAAEN,SAAS,CAAC,CAAC;EAE5B,oBACE,oBAAC,OAAO;IAAC,iBAAiB,EAAEL,iBAAkB;IAAC,iBAAiB,EAAEE,iBAAkB;IAAC,cAAc,EAAED,cAAe;IAAC,gBAAgB,EAAEM,gBAAiB;IAAC,UAAU,EAAEM,IAAK;IAAC,WAAW,EAAEJ,WAAY;IAAC,cAAc,EAAEH,cAAe;IAAC,OAAO,EAAEH,OAAQ;IAAC,YAAY,EAAEK,YAAa;IAAC,SAAS,EAAEH;EAAU,EAAE;AAE9S;AAEA,eAAeR,GAAG"}